local whitelist = {
    "xMatti12", -- Replace with actual usernames
    "meboughtpremium",
    "Bob_41969",
    "Burger_King1328",
    "invisibleguysiamik2",
    "strawberryjamtesting"
}

-- Function to check if the player is whitelisted
local function isPlayerWhitelisted(player)
    for _, name in pairs(whitelist) do
        if player.Name == name then
            return true
        end
    end
    return false
end

-- This function handles the player join logic
local function handlePlayerJoin(player)
    if isPlayerWhitelisted(player) then
        print(player.Name .. " is whitelisted. Proceeding with script.")
        
local player = game.Players.LocalPlayer

-- Wait for _unlockedGloves and Scythe to exist
local scytheStatus = player:WaitForChild("_unlockedGloves"):WaitForChild("Scythe").Value

-- Function to send a notification
local function sendNotification(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Notification";
        Text = message;
        Duration = 3; -- Duration of the notification on screen
        Button1 = "OK"; -- Optional button text
    })
end

-- Check if the player has equipped the Scythe glove
if not scytheStatus then
    -- Send notification if the Scythe glove is not equipped
    sendNotification("Please equip Scythe glove")

    -- Cancel further script execution by returning early
    return
end

-- Continue executing other scripts if Scythe is equipped
print("Scythe glove is equipped, proceeding with the script execution.")
-- Add your other script logic below this point.

-- LocalScript to send a notification

local StarterGui = game:GetService("StarterGui")

-- Send notification
StarterGui:SetCore("SendNotification", {
    Title = "Lagyfier"; -- Notification title
    Text = "By Cikéd"; -- Notification text
    Duration = 5; -- Duration in seconds
})

StarterGui:SetCore("SendNotification", {
    Title = "⚠️ Warning!"; -- Notification title
    Text = "⚠️ Loud Sounds⚠️"; -- Notification text
    Duration = 5; -- Duration in seconds
})

-- LocalScript inside StarterGui
local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

-- Create a Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.3, 0, 0.3, 0)
frame.Position = UDim2.new(0.35, 0, 0.35, 0)
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White background
frame.Parent = gui

-- Add rounded corners to the main Frame
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12) -- Set radius for rounded corners
frameCorner.Parent = frame

-- Create TextButton1
local button1 = Instance.new("TextButton")
button1.Size = UDim2.new(0.6, 0, 0.4, 0)
button1.Position = UDim2.new(0.2, 0, 0.1, 0) -- Centered with padding
button1.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red color
button1.Text = "TP ARENA"
button1.Parent = frame

-- Add rounded corners to Button 1
local button1Corner = Instance.new("UICorner")
button1Corner.CornerRadius = UDim.new(0, 8) -- Set radius for rounded corners
button1Corner.Parent = button1

-- Create TextButton2
local button2 = Instance.new("TextButton")
button2.Size = UDim2.new(0.6, 0, 0.4, 0)
button2.Position = UDim2.new(0.2, 0, 0.55, 0) -- Centered with padding
button2.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green color
button2.Text = "LAGIFY"
button2.Parent = frame

-- Add rounded corners to Button 2
local button2Corner = Instance.new("UICorner")
button2Corner.CornerRadius = UDim.new(0, 8) -- Set radius for rounded corners
button2Corner.Parent = button2

-- Dragging functionality
local dragging
local dragInput
local dragStart
local startPos
local UIS = game:GetService("UserInputService")

-- Force player into first-person view

local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

-- Function to enable first-person view
local function enableFirstPerson()
    -- Lock the player into first-person mode
    player.CameraMode = Enum.CameraMode.LockFirstPerson

    -- Set the Field of View (FOV) for first-person experience (optional, default is 70)
    camera.FieldOfView = 70  -- You can adjust this if needed

    -- Lock the mouse in the center of the screen for first-person control
    game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.LockCenter
end

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Button 1 Functionality
button1.MouseButton1Click:Connect(function()
    print("Button 1 clicked")
    -- Place your script functionality for Button 1 here
-- LocalScript
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait() -- Wait for the character to load

-- Define the target position
local targetPosition = Vector3.new(-4, -5, 2)

-- Teleport function
local function teleportToPosition()
    if character then
        -- Set the character's position to the target position
        character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        print("Teleported to position: " .. tostring(targetPosition))
    else
        print("Character not found.")
    end
end

-- Call the teleport function
teleportToPosition()

end)

local player = game.Players.LocalPlayer

-- Function to fire the ClickDetector and replicate the rock mode
local function fireClickDetector()
    fireclickdetector(workspace.Lobby.Scythe.ClickDetector)
    wait(0.2)
    for i = 1, 10000 do
local args = {
    [1] = "ScytheWeapon"
}

game:GetService("ReplicatedStorage").Scythe:FireServer(unpack(args))

    end
end

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Function to delete the right arm
local function deleteRightArm()
    local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
    if rightArm then
        rightArm:Destroy() -- Remove the right arm
    else
        warn("Right Arm or RightHand not found!")
    end
end

-- Button click event
button2.MouseButton1Click:Connect(function()
    deleteRightArm()
    wait(0.1)
    fireClickDetector()
    enableFirstPerson()
end)

    else
        print(player.Name .. " is not whitelisted. Kicking player.")
        player:Kick("You are not whitelisted.")
    end
end

-- Connect the PlayerAdded event
game.Players.PlayerAdded:Connect(handlePlayerJoin)

-- Optionally handle players who are already in the game (if your game allows late joins)
for _, player in ipairs(game.Players:GetPlayers()) do
    handlePlayerJoin(player)
end